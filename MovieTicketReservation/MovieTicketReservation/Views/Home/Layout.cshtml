@*@model MovieTicketReservation.Models.CustomerModel*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MovieTicketReservation</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />

    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script type="text/javascript">$(document).ready(function () {
            $("#register").click(function () {
                ValidationForm();
                matchCardRegex();
            })

        });
        function ValidationForm() {
            if (!$("#registerForm").valid()) {
                return false;
            }
        }
        function matchCardRegex() {
            var country = $("#country").val();
            var input = $("#postalcode").val();
            
            var postal = /^[ABCEGHJ-NPRSTVXY]\d[ABCEGHJ-NPRSTV-Z][ -]?\d[ABCEGHJ-NPRSTV-Z]\d$/i;
            var zip = /^\d{5}$|^\d{5}-\d{4}$/;
            if (country == "canada") {
                if (!postal.test(input)) {
                    $("#postalcode-customerror").removeClass("d-none");
                    $("#postalcode-customerror").text("Please enter a valid Postal Code");
                } else {
                    $("#postalcode-customerror").addClass("d-none");
                    console.log("Postal Code is Perfect");
                }
            } else if (country == "usa") {
                if (!zip.test(input)) {
                    $("#postalcode-customerror").removeClass("d-none");
                    $("#postalcode-customerror").text("Please enter a valid Zip Code");
                } else {
                    $("#postalcode-customerror").addClass("d-none");
                    console.log("Zip Code is Perfect");
                }
            }

        }</script>
</head>
<body>
    <header>
        <ul class="navbar-list">
            <li><a class="logo">ShowBooking</a></li>
            <li>@Html.ActionLink("Home", "", "Home")</li>
            <li>@Html.ActionLink("Movies", "", "Home")</li>
            <li><a href="#contact">Theatre</a></li>
            <li><a href="#about">About</a></li>

            @*if (@Model.firstName.ToString() == "")
        {*@
            <li style="float:right"><a class="login-trigger" href="#" data-target="#login" data-toggle="modal">Login</a></li>

            @*}*@
            @*else
        {
            <li>Weclome @Model.firstName </li>
        }*@

            @*@{
                var prod = ViewBag.CustUser;
            }
            @if (prod == null)
            {
                <li style="float:right"><a class="login-trigger" href="#" data-target="#login" data-toggle="modal">Login</a></li>
            }
            else
            {
                <li style="float:right"><a data-toggle="modal">Welcome @prod.firstName</a></li>
            }*@

            

            <li style="float:right">
                <div class="searchBar">
                    <input type="text" class="searchInput" placeholder="Search Here" />
                    <button type="submit" class="searchButton">Search</button>
                </div>
            </li>
        </ul>
        <hr />

        <div id="login" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <div class="modal-content">
                    <div class="modal-body">
                        <button data-dismiss="modal" class="close">&times;</button>
                        <h4 style="color:white">Login</h4>

                        <form action="loginUser" method="post" id="loginForm">
                            @*@Html.TextBoxFor(expression: model => model.email, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control", placeholder = "Email Name" })
                            @Html.ValidationMessageFor(expression: model => model.email, null, htmlAttributes: new { @class = "text-danger" })

                            @Html.PasswordFor(expression: model => model.password, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control password", placeholder = "Password" })
                            @Html.ValidationMessageFor(expression: model => model.password, null, htmlAttributes: new { @class = "text-danger" })*@
                            <input type="email" name="email" class="username form-control" placeholder="Email" required />
                            <input type="password" name="password" class="password form-control" placeholder="Password" required />
                            <label style="color:white">Don't have an account? <a href="@Url.Action("register", "Home")" >Sign Up here</a></label><br />
                            <input class="btn login" type="submit" value="Login" />
                        </form>
                    </div>
                </div>
            </div>
        </div>

        @*<div id="SignUp" class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg
                <div class="modal-content">
                    <div class="modal-body">
                        <button data-dismiss="modal" class="close">&times;</button>
                        <h4 style="color:white">Sign Up!</h4>
                        <form action="Home/SaveUserData" method="post" id="registerForm">*@
                            @*<div class="container">
                                <div class="row">
                                    <div class="col">
                                        @Html.TextBoxFor(expression: model => model.firstName, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control", placeholder = "First Name" })
                                        @Html.ValidationMessageFor(expression: model => model.firstName, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                    <div class="col">
                                        @Html.TextBoxFor(expression: model => model.lastName, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control", placeholder = "Last Name" })
                                        @Html.ValidationMessageFor(expression: model => model.lastName, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        @Html.DropDownList("country", new List<SelectListItem>
                                        {
                                           new SelectListItem{ Text="Select Country", Value = ""},
                                           new SelectListItem{ Text="Canada", Value = "canada" },
                                           new SelectListItem{ Text="USA", Value = "usa" }
                                        })
                                        <br />
                                        @Html.ValidationMessageFor(expression: model => model.country, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                    <div class="col">
                                        @Html.TextBoxFor(expression: model => model.postalcode, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control", placeholder = "Postal/Zip Code" })
                                        @Html.ValidationMessageFor(expression: model => model.postalcode, null, htmlAttributes: new { @class = "text-danger" })
                                        <span class="text-danger field-validation-error"><span id="postalcode-customerror" class="d-none"></span></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        @Html.TextBoxFor(expression: model => model.email, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control", placeholder = "Email Name" })
                                        @Html.ValidationMessageFor(expression: model => model.email, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                    <div class="col">
                                        @Html.TextBoxFor(expression: model => model.phoneNumber, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control", placeholder = "Phone Number" })
                                        @Html.ValidationMessageFor(expression: model => model.phoneNumber, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        @Html.PasswordFor(expression: model => model.password, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control password", placeholder = "Password" })
                                        @Html.ValidationMessageFor(expression: model => model.password, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                    <div class="col">
                                        @Html.PasswordFor(expression: model => model.confirmPassword, htmlAttributes: new { @class = "paySearchInput col-sm-6 username form-control password", placeholder = "Confirm password" })
                                        @Html.ValidationMessageFor(expression: model => model.confirmPassword, null, htmlAttributes: new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                            @*<label style="color:white">Already have an account? <a id="LoginButton" href="#" data-target="#login" data-toggle="modal">  Login here</a></label><br />
                            <input class="btn login" type="submit" id ="register"value="Submit" />
                        </form>
                    </div>
                </div>
            </div>
        </div>*@
    </header>
    <div>
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @*<footer class="border-top footer text-muted">
            <div class="container">
                &copy; 2021 - MovieTicketReservation - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            </div>
        </footer>*@
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>

    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>$('#signupButton').click(function () {
            $('#login').modal("hide");
        })
        $('#LoginButton').click(function () {
            $('#SignUp').modal("hide");
        })</script>
</body>
</html>
